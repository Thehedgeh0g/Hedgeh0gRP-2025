version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - app-network
    depends_on:
      valuator1:
        condition: service_healthy
      valuator2:
        condition: service_healthy

  valuator1:
    container_name: valuator1
    build:
      context: ./microservices/valuator
      dockerfile: Dockerfile
    environment:
      PORT: 5001
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:5001/health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      redis:
        condition: service_healthy

  valuator2:
    container_name: valuator2
    build:
      context: ./microservices/valuator
      dockerfile: Dockerfile
    environment:
      PORT: 5002
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:5002/health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:latest
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

networks:
  app-network:

volumes:
  redis_data: